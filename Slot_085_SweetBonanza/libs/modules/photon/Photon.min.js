var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(g,a,e){g!=Array.prototype&&g!=Object.prototype&&(g[a]=e.value)};$jscomp.getGlobal=function(g){return"undefined"!=typeof window&&window===g?g:"undefined"!=typeof global&&null!=global?global:g};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(g,a,e,h){if(a){e=$jscomp.global;g=g.split(".");for(h=0;h<g.length-1;h++){var k=g[h];k in e||(e[k]={});e=e[k]}g=g[g.length-1];h=e[g];a=a(h);a!=h&&null!=a&&$jscomp.defineProperty(e,g,{configurable:!0,writable:!0,value:a})}};$jscomp.underscoreProtoCanBeSet=function(){var g={a:!0},a={};try{return a.__proto__=g,a.a}catch(e){}return!1};
$jscomp.setPrototypeOf="function"==typeof Object.setPrototypeOf?Object.setPrototypeOf:$jscomp.underscoreProtoCanBeSet()?function(g,a){g.__proto__=a;if(g.__proto__!==a)throw new TypeError(g+" is not extensible");return g}:null;$jscomp.polyfill("Object.setPrototypeOf",function(g){return g||$jscomp.setPrototypeOf},"es6","es5");
var __extends=this&&this.__extends||function(){var g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,e){a.__proto__=e}||function(a,e){for(var h in e)e.hasOwnProperty(h)&&(a[h]=e[h])};return function(a,e){function h(){this.constructor=a}g(a,e);a.prototype=null===e?Object.create(e):(h.prototype=e.prototype,new h)}}(),Exitgames;
(function(g){(function(a){var e=function(){function a(h,e){void 0===h&&(h="");void 0===e&&(e=a.Level.INFO);this.prefix=h;this.level=e}a.prototype.setLevel=function(h){h=Math.max(h,a.Level.DEBUG);this.level=h=Math.min(h,a.Level.OFF)};a.prototype.isLevelEnabled=function(a){return a>=this.level};a.prototype.getLevel=function(){return this.level};a.prototype.debug=function(h){for(var k=[],e=1;e<arguments.length;e++)k[e-1]=arguments[e];this.log(a.Level.DEBUG,h,k)};a.prototype.info=function(h){for(var k=
[],e=1;e<arguments.length;e++)k[e-1]=arguments[e];this.log(a.Level.INFO,h,k)};a.prototype.warn=function(h){for(var k=[],e=1;e<arguments.length;e++)k[e-1]=arguments[e];this.log(a.Level.WARN,h,k)};a.prototype.error=function(h){for(var e=[],k=1;k<arguments.length;k++)e[k-1]=arguments[k];this.log(a.Level.ERROR,h,e)};a.prototype.format=function(a){for(var h=[],e=1;e<arguments.length;e++)h[e-1]=arguments[e];return this.format0(a,h)};a.prototype.formatArr=function(a,h){return this.format0(a,h)};a.prototype.log=
function(h,e,g){if(h>=this.level&&"undefined"!==typeof console&&void 0!==e)try{var k=console[a.log_types[h]];k||(k=console.log);k&&k.apply(console,[this.prefix,e].concat(g))}catch(p){}};a.prototype.format0=function(a,h){return(""==this.prefix?"":this.prefix+" ")+a+" "+h.map(function(a){if(void 0!==a)switch(typeof a){case "object":try{return JSON.stringify(a)}catch(l){return a.toString()+"("+l+")"}default:return a.toString()}}).join(" ")};a.Level={DEBUG:1,INFO:2,WARN:3,ERROR:4,OFF:6};a.log_types=["debug",
"debug","info","warn","error"];return a}();a.Logger=e;e=function(){function a(){}a.indexOf=function(a,h,e){var k=a.length;for(e=0>e?Math.max(0,k+e):e||0;e<k;e++)if(a[e]===h)return e;return-1};a.isArray=function(a){return"[object Array]"===Object.prototype.toString.call(a)};a.merge=function(a,h){for(var e in h)h.hasOwnProperty(e)&&(a[e]=h[e])};a.getPropertyOrElse=function(a,h,e){return a.hasOwnProperty(h)?a[h]:e};a.enumValueToName=function(a,h){for(var e in a)if(h==a[e])return e;return"undefined"};
a.getEnumKeyByValue=function(a,h){for(var e in a)if(h==a[e])return e};return a}();a.Util=e})(g.Common||(g.Common={}))})(Exitgames||(Exitgames={}));var Photon;
(function(g){g.ConnectionProtocol={Ws:0,Wss:1};var a=function(){function a(){}a.Byte=function(a){return a};a.Short=function(a){return a};a.Int=function(a){return a};a.Long=function(a){return a};a.Float=function(a){return a};a.Double=function(a){return a};a.String=function(a){return a};return a}();g.TypeExt=a;a=function(){function a(a,k,e){void 0===k&&(k="");void 0===e&&(e="");this.url=a;this.subprotocol=k;this.keepAliveTimeoutMs=3E3;this._frame="~m~";this._isClosing=this._isConnected=this._isConnecting=
!1;this._peerStatusListeners={};this._eventListeners={};this._responseListeners={};this.lastRtt=0;this.initTimestamp=Date.now();this.keepAliveTimer=0;this._logger=new Exitgames.Common.Logger(e&&""!=e?e+":":"")}a.prototype.isConnecting=function(){return this._isConnecting};a.prototype.getLastRtt=function(){return this.lastRtt};a.prototype.isConnected=function(){return this._isConnected};a.prototype.isClosing=function(){return this._isClosing};a.prototype.connect=function(a){var h=this;this._sessionid=
void 0;this._socket=""==this.subprotocol?new WebSocket(this.url,"Json"):new WebSocket(this.url,this.subprotocol);this._onConnecting();this._socket.onopen=function(a){};this._socket.onmessage=function(a){a=h._decode(a.data);h._onMessage(a.toString())};this._socket.onclose=function(a){h._logger.debug("onclose: wasClean =",a.wasClean,", code=",a.code,", reason =",a.reason);h._isConnecting?h._onConnectFailed(a):(1006==a.code&&h._onTimeout(),h._onDisconnect())};this._socket.onerror=function(a){h._onError(a)}};
a.prototype.disconnect=function(){this._isClosing=!0;this._socket.close()};a.prototype.sendOperation=function(a,k,e,g){a={req:a,vals:[]};if(Exitgames.Common.Util.isArray(k))a.vals=k;else if(void 0===k)a.vals=[];else throw Error(this._logger.format("PhotonPeer[sendOperation] - Trying to send non array data:",k));this._send(a);this._logger.debug("PhotonPeer[sendOperation] - Sending request:",a)};a.prototype.addPeerStatusListener=function(a,e){this._addListener(this._peerStatusListeners,a,e)};a.prototype.addEventListener=
function(a,e){this._addListener(this._eventListeners,a.toString(),e)};a.prototype.addResponseListener=function(a,e){this._addListener(this._responseListeners,a.toString(),e)};a.prototype.removePeerStatusListener=function(a,e){this._removeListener(this._peerStatusListeners,a,e)};a.prototype.removeEventListener=function(a,e){this._removeListener(this._eventListeners,a.toString(),e)};a.prototype.removeResponseListener=function(a,e){this._removeListener(this._responseListeners,a.toString(),e)};a.prototype.removePeerStatusListenersForCode=
function(a){this._removeListenersForCode(this._peerStatusListeners,a)};a.prototype.removeEventListenersForCode=function(a){this._removeListenersForCode(this._eventListeners,a.toString())};a.prototype.removeResponseListenersForCode=function(a){this._removeListenersForCode(this._responseListeners,a.toString())};a.prototype.setLogLevel=function(a){this._logger.setLevel(a)};a.prototype.onUnhandledEvent=function(a,e){this._logger.warn("PhotonPeer: No handler for event",a,"registered.")};a.prototype.onUnhandledResponse=
function(a,e){this._logger.warn("PhotonPeer: No handler for response",a,"registered.")};a.prototype._dispatchEvent=function(a,e){if(!this._dispatch(this._eventListeners,a.toString(),e,"event"))this.onUnhandledEvent(a,e)};a.prototype._dispatchResponse=function(a,e){if(!this._dispatch(this._responseListeners,a.toString(),e,"response"))this.onUnhandledResponse(a,e)};a.prototype._stringify=function(a){if("[object Object]"==Object.prototype.toString.call(a)){if(!JSON)throw Error("PhotonPeer[_stringify] - Trying to encode as JSON, but JSON.stringify is missing.");
return"~j~"+JSON.stringify(a)}return String(a)};a.prototype._encode=function(a){var h="";a=Exitgames.Common.Util.isArray(a)?a:[a];for(var e=0,g=a.length;e<g;e++){var l=null===a[e]||void 0===a[e]?"":this._stringify(a[e]);h+=this._frame+l.length+this._frame+l}return h};a.prototype._decode=function(a){var h=[];var e=a;-1!==a.indexOf("\x00")&&(e=a.replace(/[\0]/g,""));a=e;do{if(a.substr(0,3)!==this._frame)break;a=a.substr(3);e="";for(var g=0,l=a.length;g<l;g++){var p=Number(a.substr(g,1));if(a.substr(g,
1)==p)e+=p;else{a=a.substr(e.length+this._frame.length);e=Number(e);break}}h.push(a.substr(0,e));a=a.substr(e)}while(""!==a);return h};a.prototype._onMessage=function(a){"~j~"==a.substr(0,3)?this._onMessageReceived(JSON.parse(a.substr(3))):this._sessionid?this._onMessageReceived(a):(this._sessionid=a,this._onConnect())};a.prototype.resetKeepAlive=function(){var a=this;clearTimeout(this.keepAliveTimer);1E3<=this.keepAliveTimeoutMs&&(this.keepAliveTimer=setTimeout(function(){a._send({irq:1,vals:[1,
Date.now()-a.initTimestamp]},!0)},this.keepAliveTimeoutMs))};a.prototype._send=function(a,e){void 0===e&&(e=!1);var h=this._encode(a);if(this._isConnected&&!this._isClosing)this.resetKeepAlive(),this._socket.send(h);else if(!e)throw Error(this._logger.format("PhotonPeer[_send] - Operation",a.req,'- failed, "isConnected" is',this._isConnected,', "isClosing" is',this._isClosing,"!"));};a.prototype._onMessageReceived=function(a){if("object"===typeof a)if(this._logger.debug("PhotonPeer[_onMessageReceived] - Socket received message:",
a),a.vals=void 0!==a.vals?a.vals:[],0<a.vals.length&&(a.vals=this._parseMessageValuesArrayToJSON(a.vals)),void 0!==a.res){var e=parseInt(a.res);this._parseResponse(e,a)}else if(void 0!==a.evt)e=parseInt(a.evt),this._parseEvent(e,a);else if(void 0!==a.irs)e=parseInt(a.irs),this._parseInternalResponse(e,a);else throw Error(this._logger.format("PhotonPeer[_onMessageReceived] - Received undefined message type:",a));};a.prototype._parseMessageValuesArrayToJSON=function(a){var e={};if(Exitgames.Common.Util.isArray(a))if(0==
a.length%2)for(var h,g;0<a.length;)h=a.shift()+"",g=a.shift(),e[h]=g;else throw Error(this._logger.format("PhotonPeer[_parseMessageValuesToJSON] - Received invalid values array:",a));return e};a.prototype._parseEvent=function(a,e){this._dispatchEvent(a,{vals:e.vals})};a.prototype._parseResponse=function(a,e){this._dispatchResponse(a,{errCode:e.err,errMsg:e.msg,vals:e.vals})};a.prototype._parseInternalResponse=function(a,e){this.lastRtt=Date.now()-this.initTimestamp-e.vals[1];this._logger.debug("internal response:",
e)};a.prototype._onConnecting=function(){this._logger.debug("PhotonPeer[_onConnecting] - Starts connecting",this.url,'..., raising "connecting" event ...');this._isConnecting=!0;this._dispatchPeerStatus(a.StatusCodes.connecting);this.resetKeepAlive()};a.prototype._onConnect=function(){this._logger.debug('PhotonPeer[_onConnect] - Connected successfully! Raising "connect" event ...');this._isConnecting=!1;this._isConnected=!0;this._dispatchPeerStatus(a.StatusCodes.connect);this.resetKeepAlive()};a.prototype._onConnectFailed=
function(e){this._logger.error("PhotonPeer[_onConnectFailed] - Socket connection could not be created:",this.url,this.subprotocol,'Wrong host or port?\n Raising "connectFailed event ...');this._isConnecting=this._isConnected=!1;this._dispatchPeerStatus(a.StatusCodes.connectFailed)};a.prototype._onDisconnect=function(){var e=this._isConnected,g=this._isClosing;this._logger.debug('PhotonPeer[_onDisconnect] - Socket closed, raising "disconnect" event ...');this._isClosing=this._isConnected=this._isConnecting=
!1;e&&(g?this._dispatchPeerStatus(a.StatusCodes.disconnect):this._dispatchPeerStatus(a.StatusCodes.connectClosed))};a.prototype._onTimeout=function(){this._logger.debug('PhotonPeer[_onTimeout] - Client timed out! Raising "timeout" event ...');this._dispatchPeerStatus(a.StatusCodes.timeout)};a.prototype._onError=function(e){this._logger.error("PhotonPeer[_onError] - Connection error:",e);this._isConnecting=this._isConnected=this._isClosing=!1;this._dispatchPeerStatus(a.StatusCodes.error)};a.prototype._addListener=
function(a,e,g){e in a||(a[e]=[]);g&&"function"===typeof g?(this._logger.debug("PhotonPeer[_addListener] - Adding listener for event",e),a[e].push(g)):this._logger.error("PhotonPeer[_addListener] - Listener",e,"is not a function but of type",typeof g,". No listener added!");return this};a.prototype._dispatch=function(a,e,g,q){if(e in a){a=a[e];e=0;for(q=a.length;e<q;e++)Exitgames.Common.Util.isArray(g)||(g=[g]),a[e].apply(this,void 0===g?[]:g);return!0}return!1};a.prototype._dispatchPeerStatus=function(a){this._dispatch(this._peerStatusListeners,
a,void 0,"peerStatus")||this._logger.warn("PhotonPeer[_dispatchPeerStatus] - No handler for ",a,"registered.")};a.prototype._removeListener=function(a,e,g){if(e in a){var h=a[e].length;a[e]=a[e].filter(function(a){return a!=g});this._logger.debug("PhotonPeer[_removeListener] - Removing listener for event",e,"removed:",h-a[e].length)}return this};a.prototype._removeListenersForCode=function(a,e){this._logger.debug("PhotonPeer[_removeListenersForCode] - Removing all listeners for event",e);e in a&&
(a[e]=[]);return this};a.StatusCodes={connecting:"connecting",connect:"connect",connectFailed:"connectFailed",disconnect:"disconnect",connectClosed:"connectClosed",error:"error",timeout:"timeout"};return a}();g.PhotonPeer=a})(Photon||(Photon={}));
(function(g){(function(a){function e(a,b){for(var c in h)if(0==a.indexOf(h[c]))return a;switch(b){case g.ConnectionProtocol.Ws:return h.ws+a;case g.ConnectionProtocol.Wss:return h.wss+a;default:return h.ws+a}}var h={ws:"ws://",wss:"wss://"},k=function(){function f(a,c,d){this.name=a;this.actorNr=c;this.isLocal=d;this.customProperties={};this.suspended=!1}f.prototype.getRoom=function(){return this.loadBalancingClient.myRoom()};f.prototype.raiseEvent=function(a,c,d){this.loadBalancingClient&&this.loadBalancingClient.raiseEvent(a,
c,d)};f.prototype.setName=function(a){this.name=a};f.prototype.onPropertiesChange=function(a,c){};f.prototype.getCustomProperty=function(a){return this.customProperties[a]};f.prototype.getCustomPropertyOrElse=function(a,c){return Exitgames.Common.Util.getPropertyOrElse(this.customProperties,a,c)};f.prototype.setCustomProperty=function(a,c,d,f){void 0===d&&(d=!1);this.customProperties[a]=c;var b={};b[a]=c;var e;void 0!=f&&(e=(n={},n[a]=f,n));this.loadBalancingClient&&this.loadBalancingClient.isJoinedToRoom()&&
this.loadBalancingClient._setPropertiesOfActor(this.actorNr,b,d,e);this.onPropertiesChange(b,!0);var n};f.prototype.setCustomProperties=function(a,c,d){void 0===c&&(c=!1);var b={},f;for(f in a)this.customProperties[f]=a[f],b[f]=a[f];this.loadBalancingClient&&this.loadBalancingClient.isJoinedToRoom()&&this.loadBalancingClient._setPropertiesOfActor(this.actorNr,b,c,d);this.onPropertiesChange(b,!0)};f.prototype.getJoinToken=function(){return this.joinToken};f.prototype.isSuspended=function(){return this.suspended};
f.prototype._getAllProperties=function(){var b={};b[a.Constants.ActorProperties.PlayerName]=this.name;for(var c in this.customProperties)b[c]=this.customProperties[c];return b};f.prototype._setLBC=function(a){this.loadBalancingClient=a};f.prototype._updateFromResponse=function(b){this.actorNr=b[a.Constants.ParameterCode.ActorNr];b=b[a.Constants.ParameterCode.PlayerProperties];if(void 0!==b){var c=b[a.Constants.ActorProperties.PlayerName];void 0!==c&&(this.name=c);this._updateCustomProperties(b)}};
f.prototype._updateMyActorFromResponse=function(b){this.joinToken=(this.actorNr=b[a.Constants.ParameterCode.ActorNr])?this.actorNr.toString():null};f.prototype._updateCustomProperties=function(a){for(var b in a)this.customProperties[b]=a[b];this.onPropertiesChange(a,!1)};f.prototype._setSuspended=function(a){this.suspended=a};f._getActorNrFromResponse=function(b){return b[a.Constants.ParameterCode.ActorNr]};return f}();a.Actor=k;var r=function(){function f(a){this.address=this.name="";this.maxPlayers=
0;this.isOpen=this.isVisible=!0;this.suspendedPlayerLiveTime=this.emptyRoomLiveTime=this.playerCount=0;this.cleanupCacheOnLeave=this.removed=this.uniqueUserId=!1;this.masterClientId=0;this._customProperties={};this._propsListedInLobby=[];this.name=a}f.prototype.onPropertiesChange=function(a,c){};f.prototype.getCustomProperty=function(a){return this._customProperties[a]};f.prototype.getCustomPropertyOrElse=function(a,c){return Exitgames.Common.Util.getPropertyOrElse(this._customProperties,a,c)};f.prototype._updateFromMasterResponse=
function(b){this.address=b[a.Constants.ParameterCode.Address];if(b=b[a.Constants.ParameterCode.RoomName])this.name=b};f.prototype._updateFromProps=function(b){if(b){this.maxPlayers=this.updateIfExists(this.maxPlayers,a.Constants.GameProperties.MaxPlayers,b);this.isVisible=this.updateIfExists(this.isVisible,a.Constants.GameProperties.IsVisible,b);this.isOpen=this.updateIfExists(this.isOpen,a.Constants.GameProperties.IsOpen,b);this.playerCount=this.updateIfExists(this.playerCount,a.Constants.GameProperties.PlayerCount,
b);this.removed=this.updateIfExists(this.removed,a.Constants.GameProperties.Removed,b);this._propsListedInLobby=this.updateIfExists(this._propsListedInLobby,a.Constants.GameProperties.PropsListedInLobby,b);this.cleanupCacheOnLeave=this.updateIfExists(this.cleanupCacheOnLeave,a.Constants.GameProperties.CleanupCacheOnLeave,b);this.masterClientId=this.updateIfExists(this.masterClientId,a.Constants.GameProperties.MasterClientId,b);var c={},d;for(d in b)parseInt(d).toString()!=d&&this._customProperties[d]!==
b[d]&&(this._customProperties[d]=b[d],c[d]=b[d]);this.onPropertiesChange(c,!1)}};f.prototype._updateFromEvent=function(b){b&&(this.masterClientId=this.updateIfExists(this.masterClientId,a.Constants.ParameterCode.MasterClientId,b))};f.prototype.updateIfExists=function(a,c,d){return d.hasOwnProperty(c)?d[c]:a};return f}();a.RoomInfo=r;var q=function(f){function b(a){return f.call(this,a)||this}__extends(b,f);b.prototype.setCustomProperty=function(a,b,f,e){void 0===f&&(f=!1);this._customProperties[a]=
b;var c={};c[a]=b;var d;void 0!=e&&(d=(n={},n[a]=e,n));this.loadBalancingClient&&this.loadBalancingClient.isJoinedToRoom()&&this.loadBalancingClient._setPropertiesOfRoom(c,f,d);this.onPropertiesChange(c,!0);var n};b.prototype.setCustomProperties=function(a,b,f){void 0===b&&(b=!1);var c={},d;for(d in a)this._customProperties[d]=a[d],c[d]=a[d];this.loadBalancingClient&&this.loadBalancingClient.isJoinedToRoom()&&this.loadBalancingClient._setPropertiesOfRoom(c,b,f);this.onPropertiesChange(c,!0)};b.prototype.setProp=
function(a,b){if(this.loadBalancingClient&&this.loadBalancingClient.isJoinedToRoom()){var c={};c[a]=b;this.loadBalancingClient._setPropertiesOfRoom(c,!1,void 0)}};b.prototype.setIsVisible=function(b){this.isVisible!=b&&(this.isVisible=b,this.setProp(a.Constants.GameProperties.IsVisible,b))};b.prototype.setIsOpen=function(b){this.isOpen!=b&&(this.isOpen=b,this.setProp(a.Constants.GameProperties.IsOpen,b))};b.prototype.setMaxPlayers=function(b){this.maxPlayers!=b&&(this.maxPlayers=b,this.setProp(a.Constants.GameProperties.MaxPlayers,
b))};b.prototype.setEmptyRoomLiveTime=function(a){this.emptyRoomLiveTime=a};b.prototype.setSuspendedPlayerLiveTime=function(a){this.suspendedPlayerLiveTime=a};b.prototype.setPlugins=function(a){this.plugins=a};b.prototype.setUniqueUserId=function(a){this.uniqueUserId=a};b.prototype.setPropsListedInLobby=function(a){this._propsListedInLobby=a};b.prototype._setLBC=function(a){this.loadBalancingClient=a};return b}(r);a.Room=q;var l=function(){function f(b,c,d){this.appId=c;this.appVersion=d;this.autoJoinLobby=
!0;this.connectOptions={};this.createRoomOptions={};this.joinRoomOptions={};this.roomInfos=[];this.roomInfosDict={};this.actors={};this.actorsArray=[];this.lowestActorId=0;this.userAuthType=a.Constants.CustomAuthenticationType.None;this.userAuthData=this.userAuthParameters="";this.lobbyStatsRequestList=[];this.state=f.State.Uninitialized;this.logger=new Exitgames.Common.Logger("Client:");this.validNextState={};if("number"==typeof b)switch(this.connectionProtocol=b,b){case g.ConnectionProtocol.Ws:this.masterServerAddress=
"ws://app-eu.exitgamescloud.com:9090";this.nameServerAddress="ws://ns.exitgames.com:9093";break;case g.ConnectionProtocol.Wss:this.masterServerAddress="wss://app-eu.exitgamescloud.com:19090";this.nameServerAddress="wss://ns.exitgames.com:19093";break;default:this.nameServerAddress=this.masterServerAddress="wrong_protocol_error",this.logger.error("Wrong protocol: ",b)}else"string"==typeof b?(this.connectionProtocol=g.ConnectionProtocol.Ws,this.nameServerAddress=this.masterServerAddress=b):(this.connectionProtocol=
g.ConnectionProtocol.Ws,this.nameServerAddress=this.masterServerAddress="wrong_protocol_type_error",this.logger.error("Wrong protocol type: ",typeof b));this.initValidNextState();this.currentRoom=this.roomFactoryInternal("");this._myActor=this.actorFactoryInternal("",-1,!0);this.addActor(this._myActor)}f.prototype.onStateChange=function(a){};f.prototype.onError=function(a,c){};f.prototype.onOperationResponse=function(a,c,d,f){};f.prototype.onEvent=function(a,c,d){};f.prototype.onRoomList=function(a){};
f.prototype.onRoomListUpdate=function(a,c,d,f){};f.prototype.onMyRoomPropertiesChange=function(){};f.prototype.onActorPropertiesChange=function(a){};f.prototype.onJoinRoom=function(a){};f.prototype.onActorJoin=function(a){};f.prototype.onActorLeave=function(a,c){};f.prototype.onActorSuspend=function(a){};f.prototype.onFindFriendsResult=function(a,c,d){};f.prototype.onLobbyStats=function(a,c,d){};f.prototype.onAppStats=function(a,c,d){};f.prototype.onGetRegionsResult=function(a,c,d){};f.prototype.onWebRpcResult=
function(a,c,d,f,e){};f.prototype.roomFactory=function(a){return new q(a)};f.prototype.actorFactory=function(a,c,d){return new k(a,c,d)};f.prototype.myActor=function(){return this._myActor};f.prototype.myRoom=function(){return this.currentRoom};f.prototype.myRoomActors=function(){return this.actors};f.prototype.myRoomActorCount=function(){return this.actorsArray.length};f.prototype.myRoomActorsArray=function(){return this.actorsArray};f.prototype.myRoomMasterActorNr=function(){return this.myRoom().masterClientId?
this.myRoom().masterClientId:this.lowestActorId};f.prototype.lastRtt=function(){return this.gamePeer&&this.gamePeer.getLastRtt()};f.prototype.roomFactoryInternal=function(a){void 0===a&&(a="");a=this.roomFactory(a);a._setLBC(this);return a};f.prototype.actorFactoryInternal=function(a,c,d){void 0===a&&(a="");void 0===c&&(c=-1);void 0===d&&(d=!1);a=this.actorFactory(a,c,d);a._setLBC(this);return a};f.prototype.setNameServerAddress=function(a){this.nameServerAddress=a};f.prototype.getNameServerAddress=
function(){return this.nameServerAddress};f.prototype.setMasterServerAddress=function(a){this.masterServerAddress=a};f.prototype.getMasterServerAddress=function(){return this.nameServerAddress};f.prototype.setUserId=function(a){this.userId=a};f.prototype.getUserId=function(){return this.userId};f.prototype.setCustomAuthentication=function(a,c,d){void 0===c&&(c=g.LoadBalancing.Constants.CustomAuthenticationType.Custom);this.userAuthType=c;this.userAuthParameters=a;this.userAuthData=d};f.prototype.connect=
function(a){"boolean"===typeof a&&(a=a?{keepMasterConnection:!0}:{keepMasterConnection:!1});a||(a={});if(this.checkNextState(f.State.ConnectingToMasterserver,!0)){this.changeState(f.State.ConnectingToMasterserver);this.logger.info("Connecting to Master",this.masterServerAddress);this.connectOptions={};for(var b in a)this.connectOptions[b]=a[b];this.masterPeer=new m(this,e(this.masterServerAddress,this.connectionProtocol),"");this.initMasterPeer(this.masterPeer);this.masterPeer.connect(this.appId);
return!0}return!1};f.prototype.connectToNameServer=function(a){a||(a={});if(this.checkNextState(f.State.ConnectingToNameServer,!0)){this.changeState(f.State.ConnectingToNameServer);this.logger.info("Connecting to NameServer",this.nameServerAddress);this.connectOptions={};for(var b in a)this.connectOptions[b]=a[b];this.nameServerPeer=new p(this,e(this.nameServerAddress,this.connectionProtocol),"");this.initNameServerPeer(this.nameServerPeer);this.nameServerPeer.connect(this.appId);return!0}return!1};
f.prototype.fillCreateRoomOptions=function(b,c){c=c||{};var d={};void 0!==c.isVisible&&(d[a.Constants.GameProperties.IsVisible]=c.isVisible);void 0!==c.isOpen&&(d[a.Constants.GameProperties.IsOpen]=c.isOpen);void 0!==c.maxPlayers&&(d[a.Constants.GameProperties.MaxPlayers]=c.maxPlayers);void 0!==c.propsListedInLobby&&(d[a.Constants.GameProperties.PropsListedInLobby]=g.TypeExt.String(c.propsListedInLobby));if(void 0!==c.customGameProperties)for(var f in c.customGameProperties)d[f]=c.customGameProperties[f];
b.push(a.Constants.ParameterCode.GameProperties,d);b.push(a.Constants.ParameterCode.CleanupCacheOnLeave,!0);b.push(a.Constants.ParameterCode.Broadcast,!0);void 0!==c.emptyRoomLiveTime&&b.push(a.Constants.ParameterCode.EmptyRoomTTL,g.TypeExt.Int(c.emptyRoomLiveTime));void 0!==c.suspendedPlayerLiveTime&&b.push(a.Constants.ParameterCode.PlayerTTL,g.TypeExt.Int(c.suspendedPlayerLiveTime));void 0!==c.plugins&&b.push(a.Constants.ParameterCode.Plugins,c.plugins);void 0!==c.uniqueUserId&&b.push(a.Constants.ParameterCode.CheckUserOnJoin,
c.uniqueUserId);c.lobbyName&&(b.push(a.Constants.ParameterCode.LobbyName),b.push(c.lobbyName),void 0!=c.lobbyType&&(b.push(a.Constants.ParameterCode.LobbyType),b.push(c.lobbyType)))};f.prototype.createRoomFromMy=function(a,c){this.currentRoom.name=a?a:"";c=this.copyCreateOptionsFromMyRoom(c);return this.createRoomInternal(this.masterPeer,c)};f.prototype.copyCreateOptionsFromMyRoom=function(a){a=a||{};a.isVisible=this.currentRoom.isVisible;a.isOpen=this.currentRoom.isOpen;a.maxPlayers=this.currentRoom.maxPlayers;
a.customGameProperties=this.currentRoom._customProperties;a.propsListedInLobby=this.currentRoom._propsListedInLobby;a.emptyRoomLiveTime=this.currentRoom.emptyRoomLiveTime;a.suspendedPlayerLiveTime=this.currentRoom.suspendedPlayerLiveTime;a.plugins=this.currentRoom.plugins;a.uniqueUserId=this.currentRoom.uniqueUserId;return a};f.prototype.createRoom=function(a,c){this.currentRoom=this.roomFactoryInternal(a?a:"");return this.createRoomInternal(this.masterPeer,c)};f.prototype.joinRoom=function(b,c,d){var e=
[];c&&(c.createIfNotExists&&(e.push(a.Constants.ParameterCode.JoinMode,f.JoinMode.CreateIfNotExists),this.fillCreateRoomOptions(e,d)),c.joinToken&&(e.push(a.Constants.ParameterCode.ActorNr,parseInt(c.joinToken)),e.push(a.Constants.ParameterCode.JoinMode,f.JoinMode.Rejoin)));this.currentRoom=this.roomFactoryInternal(b);e.push(a.Constants.ParameterCode.RoomName,b);this.joinRoomOptions=c||{};this.createRoomOptions=d||{};this.logger.info("Join Room",b,c,d,"...");this.masterPeer.sendOperation(a.Constants.OperationCode.JoinGame,
e);return!0};f.prototype.joinRandomRoom=function(b){var c=[];if(b){void 0!=b.matchingType&&b.matchingType!=a.Constants.MatchmakingMode.FillRoom&&(c.push(a.Constants.ParameterCode.MatchMakingType),c.push(b.matchingType));var d={},f=!1;if(void 0!=b.expectedCustomRoomProperties)for(var e in b.expectedCustomRoomProperties)d[e]=b.expectedCustomRoomProperties[e],f=!0;void 0!=b.expectedMaxPlayers&&0<b.expectedMaxPlayers&&(d[a.Constants.GameProperties.MaxPlayers]=b.expectedMaxPlayers,f=!0);f&&(c.push(a.Constants.ParameterCode.GameProperties),
c.push(d));b.lobbyName&&(c.push(a.Constants.ParameterCode.LobbyName),c.push(b.lobbyName),void 0!=b.lobbyType&&(c.push(a.Constants.ParameterCode.LobbyType),c.push(b.lobbyType)));b.sqlLobbyFilter&&(c.push(a.Constants.ParameterCode.Data),c.push(b.sqlLobbyFilter))}this.logger.info("Join Random Room",b&&b.lobbyName,b&&b.lobbyType,"...");this.masterPeer.sendOperation(a.Constants.OperationCode.JoinRandomGame,c);return!0};f.prototype._setPropertiesOfRoom=function(b,c,d){var f=[];f.push(a.Constants.ParameterCode.Properties);
f.push(b);f.push(a.Constants.ParameterCode.Broadcast);f.push(!0);c&&(f.push(a.Constants.ParameterCode.Forward),f.push(!0));d&&(f.push(a.Constants.ParameterCode.ExpectedValues),f.push(d));this.gamePeer.sendOperation(a.Constants.OperationCode.SetProperties,f)};f.prototype._setPropertiesOfActor=function(b,c,d,f){var e=[];e.push(a.Constants.ParameterCode.ActorNr);e.push(b);e.push(a.Constants.ParameterCode.Properties);e.push(c);e.push(a.Constants.ParameterCode.Broadcast);e.push(!0);d&&(e.push(a.Constants.ParameterCode.Forward),
e.push(!0));f&&(e.push(a.Constants.ParameterCode.ExpectedValues),e.push(f));this.gamePeer.sendOperation(a.Constants.OperationCode.SetProperties,e)};f.prototype.disconnect=function(){this.nameServerPeer&&this.nameServerPeer.disconnect();this._cleanupNameServerPeerData();this.masterPeer&&this.masterPeer.disconnect();this._cleanupMasterPeerData();this.gamePeer&&this.gamePeer.disconnect();this._cleanupGamePeerData();this.changeState(f.State.Disconnected)};f.prototype.suspendRoom=function(){this.isJoinedToRoom()&&
(this.gamePeer&&this.gamePeer.disconnect(),this._cleanupGamePeerData(),this.isConnectedToMaster()?this.changeState(f.State.JoinedLobby):(this.changeState(f.State.Disconnected),this.connect(this.connectOptions)))};f.prototype.leaveRoom=function(){this.isJoinedToRoom()&&(this.gamePeer&&(this.gamePeer.sendOperation(a.Constants.OperationCode.Leave),this.gamePeerWaitingForDisconnect=!0),this._cleanupGamePeerData(),this.isConnectedToMaster()?this.changeState(f.State.JoinedLobby):(this.changeState(f.State.Disconnected),
this.connect(this.connectOptions)))};f.prototype.raiseEvent=function(a,c,d){this.isJoinedToRoom()&&this.gamePeer.raiseEvent(a,c,d)};f.prototype.changeGroups=function(a,c){this.isJoinedToRoom()&&(this.logger.debug("Group change:",a,c),this.gamePeer.changeGroups(a,c))};f.prototype.findFriends=function(a){if(this.isConnectedToMaster())if(a&&"object"==typeof a){this.findFriendsRequestList=[];for(var b=0;b<a.length;++b)if("string"==typeof a[b])this.findFriendsRequestList[b]=a[b];else{this.logger.error("FindFriends request error:",
"Friend name is not a string",b);this.onFindFriendsResult(-1,"Friend name is not a string "+b,{});return}this.logger.debug("Find friends:",a);this.masterPeer.findFriends(this.findFriendsRequestList)}else this.logger.error("FindFriends request error:","Parameter is not an array"),this.onFindFriendsResult(-1,"Parameter is not an array",{});else this.logger.error("FindFriends request error:","Not connected to Master"),this.onFindFriendsResult(f.PeerErrorCode.MasterError,"Not connected to Master",{})};
f.prototype.requestLobbyStats=function(b){if(this.isConnectedToMaster()){this.lobbyStatsRequestList=[];if(b)if("object"==typeof b)for(var c=0;c<b.length;++c){var d=b[c];if("object"==typeof d){var e=d[0];if(e){if(void 0===d[1])d=a.Constants.LobbyType.Default;else if("number"==typeof d[1])d=d[1];else{this.requestLobbyStatsErr("Lobby type is invalid",c);return}this.lobbyStatsRequestList[c]=[e.toString(),d]}else{this.requestLobbyStatsErr("Lobby name is empty",c);return}}else{this.requestLobbyStatsErr("Lobby id is not an array",
c);return}}else{this.requestLobbyStatsErr("Parameter is not an array");return}this.masterPeer.requestLobbyStats(this.lobbyStatsRequestList)}else this.logger.error("LobbyState request error:","Not connected to Master"),this.onLobbyStats(f.PeerErrorCode.MasterError,"Not connected to Master",[])};f.prototype.requestLobbyStatsErr=function(a,c){void 0===c&&(c="");this.logger.error("LobbyState request error:",a,c);this.onLobbyStats(-1,a+" "+c,[])};f.prototype.getRegions=function(){this.isConnectedToNameServer()?
(this.logger.debug("GetRegions..."),this.nameServerPeer.getRegions(this.appId)):(this.logger.error("GetRegions request error:","Not connected to NameServer"),this.onGetRegionsResult(f.PeerErrorCode.NameServerError,"Not connected to NameServer",{}))};f.prototype.webRpc=function(a,c){this.isConnectedToMaster()?(this.logger.debug("WebRpc..."),this.masterPeer.webRpc(a,c)):this.isJoinedToRoom()?(this.logger.debug("WebRpc..."),this.gamePeer.webRpc(a,c)):(this.logger.error("WebRpc request error:","Connected to neither Master nor Game server"),
this.onWebRpcResult(f.PeerErrorCode.MasterError,"Connected to neither Master nor Game server",a,0,{}))};f.prototype.connectToRegionMaster=function(a){if(this.isConnectedToNameServer())return this.logger.debug("Connecting to Region Master",a,"..."),this.nameServerPeer.opAuth(this.appId,this.appVersion,this.userAuthType,this.userAuthParameters,this.userAuthData,this.userId,a),!0;if(this.connectToNameServer({region:a}))return!0;this.logger.error("Connecting to Region Master error:","Not connected to NameServer");
return!1};f.prototype.isConnectedToMaster=function(){return this.masterPeer&&this.masterPeer.isConnected()};f.prototype.isConnectedToNameServer=function(){return this.nameServerPeer&&this.nameServerPeer.isConnected()};f.prototype.isInLobby=function(){return this.state==f.State.JoinedLobby};f.prototype.isJoinedToRoom=function(){return this.state==f.State.Joined};f.prototype.isConnectedToGame=function(){return this.isJoinedToRoom()};f.prototype.availableRooms=function(){return this.roomInfos};f.prototype.setLogLevel=
function(a){this.logger.setLevel(a);this.nameServerPeer&&this.nameServerPeer.setLogLevel(a);this.masterPeer&&this.masterPeer.setLogLevel(a);this.gamePeer&&this.gamePeer.setLogLevel(a)};f.prototype.addRoom=function(a){this.roomInfos.push(a);this.roomInfosDict[a.name]=a};f.prototype.clearRooms=function(){this.roomInfos=[];this.roomInfosDict={}};f.prototype.purgeRemovedRooms=function(){this.roomInfos=this.roomInfos.filter(function(a){return!a.removed});for(var a in this.roomInfosDict)this.roomInfosDict[a].removed&&
delete this.roomInfosDict[a]};f.prototype.addActor=function(a){this.actors[a.actorNr]=a;this.actorsArray.push(a);this.currentRoom.playerCount=this.actorsArray.length;if(0==this.lowestActorId||this.lowestActorId>a.actorNr)this.lowestActorId=a.actorNr};f.prototype.removeActor=function(a){delete this.actors[a];this.actorsArray=this.actorsArray.filter(function(b){return b.actorNr!=a});this.currentRoom.playerCount=this.actorsArray.length;this.lowestActorId==a&&(this.lowestActorId=0<this.actorsArray.length?
this.actorsArray.reduce(function(a,d){return a.actorNr<d.actorNr?a:d}).actorNr:0)};f.prototype.clearActors=function(){this.actors={};this.actorsArray=[];this.lowestActorId=this.currentRoom.playerCount=0};f.prototype.changeState=function(a){this.logger.info("State:",f.StateToName(this.state),"->",f.StateToName(a));this.state=a;this.onStateChange(a)};f.prototype.createRoomInternal=function(b,c){var d=[];this.currentRoom.name&&d.push(a.Constants.ParameterCode.RoomName,this.currentRoom.name);this.fillCreateRoomOptions(d,
c);b===this.masterPeer&&(this.createRoomOptions=c);b===this.gamePeer&&(d.push(a.Constants.ParameterCode.PlayerProperties),d.push(this._myActor._getAllProperties()));(b==this.gamePeer?this.gamePeer._logger:this.masterPeer._logger).info("Create Room",c&&c.lobbyName,c&&c.lobbyType,"...");b.sendOperation(a.Constants.OperationCode.CreateGame,d)};f.prototype.updateUserIdAndNickname=function(b,c){var d=b[a.Constants.ParameterCode.UserId];void 0!=d&&(this.setUserId(d),c.info("Setting userId sent by server:",
d));b=b[a.Constants.ParameterCode.Nickname];void 0!=b&&(this.myActor().setName(b),c.info("Setting nickname sent by server:",b))};f.prototype.initNameServerPeer=function(b){var c=this;b.setLogLevel(this.logger.getLevel());b.addPeerStatusListener(g.PhotonPeer.StatusCodes.error,function(){c.changeState(f.State.Error);c._onErrorInternal(f.PeerErrorCode.NameServerError,"NameServer peer error")});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.connectFailed,function(){c.changeState(f.State.Error);c._onErrorInternal(f.PeerErrorCode.NameServerConnectFailed,
"NameServer peer connect failed. "+c.nameServerAddress)});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.timeout,function(){c.changeState(f.State.Error);c._onErrorInternal(f.PeerErrorCode.NameServerTimeout,"NameServer peer timeout")});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.connecting,function(){});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.connect,function(){b._logger.info("Connected");c.changeState(f.State.ConnectedToNameServer);void 0!=c.connectOptions.region&&b.opAuth(c.appId,
c.appVersion,c.userAuthType,c.userAuthParameters,c.userAuthData,c.userId,c.connectOptions.region)});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.disconnect,function(){b==c.nameServerPeer&&(c._cleanupNameServerPeerData(),b._logger.info("Disconnected"))});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.connectClosed,function(){b._logger.info("Server closed connection");c.changeState(f.State.Error);c._onErrorInternal(f.PeerErrorCode.NameServerConnectClosed,"NameServer server closed connection")});
b.addResponseListener(a.Constants.OperationCode.GetRegions,function(d){b._logger.debug("resp GetRegions",d);var f={};if(0==d.errCode){var e=d.vals[a.Constants.ParameterCode.Region],g=d.vals[a.Constants.ParameterCode.Address],h;for(h in e)f[e[h]]=g[h]}else b._logger.error("GetRegions request error.",d.errCode);c.onGetRegionsResult(d.errCode,d.errMsg,f)});b.addResponseListener(a.Constants.OperationCode.Authenticate,function(d){b._logger.debug("resp Authenticate",d);0==d.errCode?(b._logger.info("Authenticated"),
b.disconnect(),c.updateUserIdAndNickname(d.vals,b._logger),c.masterServerAddress=d.vals[a.Constants.ParameterCode.Address],b._logger.info("Connecting to Master server",c.masterServerAddress,"..."),c.connect({userAuthSecret:d.vals[a.Constants.ParameterCode.Secret]})):(c.changeState(f.State.Error),c._onErrorInternal(f.PeerErrorCode.NameServerAuthenticationFailed,"NameServer authentication failed: "+d.errCode+" "+d.errMsg))})};f.prototype.initMasterPeer=function(b){var c=this;b.setLogLevel(this.logger.getLevel());
b.addPeerStatusListener(g.PhotonPeer.StatusCodes.error,function(){c.changeState(f.State.Error);c._onErrorInternal(f.PeerErrorCode.MasterError,"Master peer error")});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.connectFailed,function(){c.changeState(f.State.Error);c._onErrorInternal(f.PeerErrorCode.MasterConnectFailed,"Master peer connect failed: "+c.masterServerAddress)});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.timeout,function(){c.changeState(f.State.Error);c._onErrorInternal(f.PeerErrorCode.MasterTimeout,
"Master peer error timeout")});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.connecting,function(){});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.connect,function(){b._logger.info("Connected");var d=[];c.connectOptions.userAuthSecret?(d.push(a.Constants.ParameterCode.Secret,c.connectOptions.userAuthSecret),b.sendOperation(a.Constants.OperationCode.Authenticate,d),b._logger.info("Authenticate with secret...")):(d.push(a.Constants.ParameterCode.ApplicationId),d.push(c.appId),d.push(a.Constants.ParameterCode.AppVersion),
d.push(c.appVersion),c.userAuthType!=a.Constants.CustomAuthenticationType.None&&(d.push(a.Constants.ParameterCode.ClientAuthenticationType,g.TypeExt.Byte(c.userAuthType)),d.push(a.Constants.ParameterCode.ClientAuthenticationParams,c.userAuthParameters),c.userAuthData&&d.push(a.Constants.ParameterCode.ClientAuthenticationData,c.userAuthData)),c.userId&&d.push(a.Constants.ParameterCode.UserId,c.userId),c.connectOptions.lobbyStats&&d.push(a.Constants.ParameterCode.LobbyStats,!0),b.sendOperation(a.Constants.OperationCode.Authenticate,
d),b._logger.info("Authenticate..."))});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.disconnect,function(){b==c.masterPeer&&(c._cleanupMasterPeerData(),b._logger.info("Disconnected"))});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.connectClosed,function(){b._logger.info("Server closed connection");c.changeState(f.State.Error);c._onErrorInternal(f.PeerErrorCode.MasterConnectClosed,"Master server closed connection")});b.addEventListener(a.Constants.EventCode.GameList,function(d){d=d.vals[a.Constants.ParameterCode.GameList];
c.clearRooms();for(var f in d){var e=new r(f);e._updateFromProps(d[f]);c.addRoom(e)}c.onRoomList(c.roomInfos);b._logger.debug("ev GameList",c.roomInfos,d)});b.addEventListener(a.Constants.EventCode.GameListUpdate,function(d){d=d.vals[a.Constants.ParameterCode.GameList];var f=[],e=[],g=[],h;for(h in d){var l=c.roomInfos.filter(function(a){return a.name==h});if(0<l.length){var m=l[0];m._updateFromProps(d[h]);m.removed?g.push(m):f.push(m)}else l=new r(h),l._updateFromProps(d[h]),c.addRoom(l),e.push(m)}c.purgeRemovedRooms();
c.onRoomListUpdate(c.roomInfos,f,e,g);b._logger.debug("ev GameListUpdate:",c.roomInfos,"u:",f,"a:",e,"r:",g,d)});b.addResponseListener(a.Constants.OperationCode.Authenticate,function(d){b._logger.debug("resp Authenticate",d);d.errCode?(c.changeState(f.State.Error),c._onErrorInternal(f.PeerErrorCode.MasterAuthenticationFailed,"Master authentication failed: "+d.errCode+" "+d.errMsg)):(b._logger.info("Authenticated"),c.updateUserIdAndNickname(d.vals,b._logger),void 0!=d.vals[a.Constants.ParameterCode.Secret]&&
(c.connectOptions.userAuthSecret=d.vals[a.Constants.ParameterCode.Secret]),c.changeState(f.State.ConnectedToMaster),d=[],c.connectOptions.lobbyName&&(d.push(a.Constants.ParameterCode.LobbyName),d.push(c.connectOptions.lobbyName),void 0!=c.connectOptions.lobbyType&&(d.push(a.Constants.ParameterCode.LobbyType),d.push(c.connectOptions.lobbyType))),c.autoJoinLobby&&(b.sendOperation(a.Constants.OperationCode.JoinLobby,d),b._logger.info("Join Lobby",c.connectOptions.lobbyName,c.connectOptions.lobbyType,
"...")))});b.addResponseListener(a.Constants.OperationCode.JoinLobby,function(d){b._logger.debug("resp JoinLobby",d);d.errCode||(b._logger.info("Joined to Lobby"),c.changeState(f.State.JoinedLobby));c._onOperationResponseInternal2(a.Constants.OperationCode.JoinLobby,d)});b.addResponseListener(a.Constants.OperationCode.CreateGame,function(d){b._logger.debug("resp CreateGame",d);d.errCode||(c.currentRoom._updateFromMasterResponse(d.vals),b._logger.debug("Created/Joined "+c.currentRoom.name),c.connectToGameServer(a.Constants.OperationCode.CreateGame));
c._onOperationResponseInternal2(a.Constants.OperationCode.CreateGame,d)});b.addResponseListener(a.Constants.OperationCode.JoinGame,function(d){b._logger.debug("resp JoinGame",d);d.errCode||(c.currentRoom._updateFromMasterResponse(d.vals),b._logger.debug("Joined "+c.currentRoom.name),c.connectToGameServer(a.Constants.OperationCode.JoinGame));c._onOperationResponseInternal2(a.Constants.OperationCode.JoinGame,d)});b.addResponseListener(a.Constants.OperationCode.JoinRandomGame,function(d){b._logger.debug("resp JoinRandomGame",
d);d.errCode||(c.currentRoom._updateFromMasterResponse(d.vals),b._logger.debug("Joined "+c.currentRoom.name),c.connectToGameServer(a.Constants.OperationCode.JoinRandomGame));c._onOperationResponseInternal2(a.Constants.OperationCode.JoinRandomGame,d)});b.addResponseListener(a.Constants.OperationCode.FindFriends,function(d){b._logger.debug("resp FindFriends",d);var f={};if(d.errCode)b._logger.error("FindFriends request error:",d.errCode);else for(var e=d.vals[a.Constants.ParameterCode.FindFriendsResponseOnlineList]||
{},g=d.vals[a.Constants.ParameterCode.FindFriendsResponseRoomIdList]||{},h=0;h<c.findFriendsRequestList.length;++h){var l=c.findFriendsRequestList[h];l&&(f[l]={online:e[h],roomId:g[h]})}c.onFindFriendsResult(d.errCode,d.errMsg,f)});b.addResponseListener(a.Constants.OperationCode.LobbyStats,function(d){b._logger.debug("resp LobbyStats",d);var f=[];if(d.errCode)b._logger.error("LobbyStats request error:",d.errCode);else{var e=d.vals[a.Constants.ParameterCode.LobbyName],g=d.vals[a.Constants.ParameterCode.LobbyType]||
{},h=d.vals[a.Constants.ParameterCode.PeerCount]||{},l=d.vals[a.Constants.ParameterCode.GameCount]||{};if(e)for(var m=0;m<e.length;++m)f[m]={lobbyName:e[m],lobbyType:g[m],peerCount:h[m],gameCount:l[m]};else for(m=0;m<c.lobbyStatsRequestList.length;++m)e=c.lobbyStatsRequestList[m],f[m]={lobbyName:e[0],lobbyType:e[1],peerCount:h[m],gameCount:l[m]}}c.onLobbyStats(d.errCode,d.errMsg,f)});b.addEventListener(a.Constants.EventCode.LobbyStats,function(d){b._logger.debug("ev LobbyStats",d);var f=[],e=d.vals[a.Constants.ParameterCode.LobbyName],
g=d.vals[a.Constants.ParameterCode.LobbyType]||{},h=d.vals[a.Constants.ParameterCode.PeerCount]||{};d=d.vals[a.Constants.ParameterCode.GameCount]||{};if(e)for(var l=0;l<e.length;++l)f[l]={lobbyName:e[l],lobbyType:g[l],peerCount:h[l],gameCount:d[l]};c.onLobbyStats(0,"",f)});b.addEventListener(a.Constants.EventCode.AppStats,function(d){b._logger.debug("ev AppStats",d);c.onAppStats(0,"",{peerCount:d.vals[a.Constants.ParameterCode.PeerCount],masterPeerCount:d.vals[a.Constants.ParameterCode.MasterPeerCount],
gameCount:d.vals[a.Constants.ParameterCode.GameCount]})});b.addResponseListener(a.Constants.OperationCode.Rpc,b.webRpcHandler(this))};f.prototype.connectToGameServer=function(a){this.connectOptions.keepMasterConnection||this.masterPeer.disconnect();return this.checkNextState(f.State.ConnectingToGameserver,!0)?(this.logger.info("Connecting to Game",this.currentRoom.address),this.gamePeer=new t(this,e(this.currentRoom.address,this.connectionProtocol),""),this.gamePeerWaitingForDisconnect=!1,this.initGamePeer(this.gamePeer,
a),this.gamePeer.connect(this.appId),this.changeState(f.State.ConnectingToGameserver),!0):!1};f.prototype.initGamePeer=function(b,c){var d=this;b.setLogLevel(this.logger.getLevel());b.addPeerStatusListener(g.PhotonPeer.StatusCodes.error,function(){d.changeState(f.State.Error);d._onErrorInternal(f.PeerErrorCode.GameError,"Game peer error")});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.connectFailed,function(){d.changeState(f.State.Error);d._onErrorInternal(f.PeerErrorCode.GameConnectFailed,"Game peer connect failed: "+
d.currentRoom.address)});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.timeout,function(){d.changeState(f.State.Error);d._onErrorInternal(f.PeerErrorCode.GameTimeout,"Game peer timeout")});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.connect,function(){b._logger.info("Connected");var c=[];c.push(a.Constants.ParameterCode.ApplicationId);c.push(d.appId);c.push(a.Constants.ParameterCode.AppVersion);c.push(d.appVersion);void 0!=d.connectOptions.userAuthSecret&&(c.push(a.Constants.ParameterCode.Secret),
c.push(d.connectOptions.userAuthSecret));d.userAuthType!=a.Constants.CustomAuthenticationType.None&&(c.push(a.Constants.ParameterCode.ClientAuthenticationType),c.push(g.TypeExt.Byte(d.userAuthType)));d.userId&&c.push(a.Constants.ParameterCode.UserId,d.userId);b.sendOperation(a.Constants.OperationCode.Authenticate,c);b._logger.info("Authenticate...")});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.disconnect,function(){b==d.gamePeer&&(d._cleanupGamePeerData(),b._logger.info("Disconnected"))});b.addPeerStatusListener(g.PhotonPeer.StatusCodes.connectClosed,
function(){b._logger.info("Server closed connection");d.gamePeerWaitingForDisconnect||(d.changeState(f.State.Error),d._onErrorInternal(f.PeerErrorCode.MasterConnectClosed,"Game server closed connection"))});b.addResponseListener(a.Constants.OperationCode.Authenticate,function(e){b._logger.debug("resp Authenticate",e);e.errCode?(d.changeState(f.State.Error),d._onErrorInternal(f.PeerErrorCode.GameAuthenticationFailed,"Game authentication failed: "+e.errCode+" "+e.errMsg)):(b._logger.info("Authenticated"),
b._logger.info("Connected"),c==a.Constants.OperationCode.CreateGame?d.createRoomInternal(b,d.createRoomOptions):(e=[],e.push(a.Constants.ParameterCode.RoomName),e.push(d.currentRoom.name),e.push(a.Constants.ParameterCode.Broadcast),e.push(!0),e.push(a.Constants.ParameterCode.PlayerProperties),e.push(d._myActor._getAllProperties()),c==a.Constants.OperationCode.JoinGame&&(d.joinRoomOptions.createIfNotExists&&(e.push(a.Constants.ParameterCode.JoinMode,f.JoinMode.CreateIfNotExists),d.fillCreateRoomOptions(e,
d.createRoomOptions)),d.joinRoomOptions.joinToken&&(e.push(a.Constants.ParameterCode.ActorNr,parseInt(d.joinRoomOptions.joinToken)),e.push(a.Constants.ParameterCode.JoinMode,f.JoinMode.Rejoin))),b.sendOperation(a.Constants.OperationCode.JoinGame,e)),d.changeState(f.State.ConnectedToGameserver))});b.addResponseListener(a.Constants.OperationCode.CreateGame,function(c){b._logger.debug("resp CreateGame",c);c.errCode||(d._myActor._updateMyActorFromResponse(c.vals),b._logger.info("myActor: ",d._myActor),
d.currentRoom._updateFromProps(c.vals[a.Constants.ParameterCode.GameProperties]),d.clearActors(),d.addActor(d._myActor),d.changeState(f.State.Joined),d.onJoinRoom(!0));d._onOperationResponseInternal2(a.Constants.OperationCode.CreateGame,c)});b.addResponseListener(a.Constants.OperationCode.JoinGame,function(c){b._logger.debug("resp JoinGame",c);if(!c.errCode){d._myActor._updateMyActorFromResponse(c.vals);b._logger.info("myActor: ",d._myActor);d.clearActors();d.addActor(d._myActor);var e=c.vals[a.Constants.ParameterCode.ActorList],
g=c.vals[a.Constants.ParameterCode.PlayerProperties];if(void 0!==e)for(var h in e){var l=e[h],n;void 0!==g&&(n=g[l]);var m;void 0!==n&&(m=n[a.Constants.ActorProperties.PlayerName]);l==d._myActor.actorNr?l=d._myActor:(l=d.actorFactoryInternal(m,l),d.addActor(l));void 0!==n&&l._updateCustomProperties(n)}d.currentRoom._updateFromProps(c.vals[a.Constants.ParameterCode.GameProperties]);d.changeState(f.State.Joined);d.onJoinRoom(!1)}d._onOperationResponseInternal2(a.Constants.OperationCode.JoinGame,c)});
b.addResponseListener(a.Constants.OperationCode.SetProperties,function(c){b._logger.debug("resp SetProperties",c);d._onOperationResponseInternal2(a.Constants.OperationCode.SetProperties,c)});b.addResponseListener(a.Constants.OperationCode.Leave,function(c){b._logger.debug("resp Leave",c);b.disconnect();d._onOperationResponseInternal2(a.Constants.OperationCode.Leave,c)});b.addResponseListener(a.Constants.OperationCode.Rpc,b.webRpcHandler(this));b.addEventListener(a.Constants.EventCode.Join,function(a){b._logger.debug("ev Join",
a);if(k._getActorNrFromResponse(a.vals)===d._myActor.actorNr)d._myActor._updateFromResponse(a.vals),d.onActorJoin(d._myActor);else{var c=d.actorFactoryInternal();c._updateFromResponse(a.vals);d.addActor(c);d.onActorJoin(c)}});b.addEventListener(a.Constants.EventCode.Leave,function(c){b._logger.debug("ev Leave",c);d.myRoom()._updateFromEvent(c.vals);var f=k._getActorNrFromResponse(c.vals);if(f&&d.actors[f]){var e=d.actors[f];c.vals[a.Constants.ParameterCode.IsInactive]?(e._setSuspended(!0),d.onActorSuspend(e)):
(d.removeActor(f),d.onActorLeave(e,!1))}});b.addEventListener(a.Constants.EventCode.Disconnect,function(a){b._logger.debug("ev Disconnect",a);(a=k._getActorNrFromResponse(a.vals))&&d.actors[a]&&(a=d.actors[a],a._setSuspended(!0),d.onActorSuspend(a))});b.addEventListener(a.Constants.EventCode.PropertiesChanged,function(c){b._logger.debug("ev PropertiesChanged",c);var f=c.vals[a.Constants.ParameterCode.TargetActorNr];void 0!==f&&0<f?void 0!==d.actors[f]&&(f=d.actors[f],f._updateCustomProperties(c.vals[a.Constants.ParameterCode.Properties]),
d.onActorPropertiesChange(f)):(d.currentRoom._updateFromProps(c.vals[a.Constants.ParameterCode.Properties]),d.onMyRoomPropertiesChange())})};f.prototype._cleanupNameServerPeerData=function(){};f.prototype._cleanupMasterPeerData=function(){};f.prototype._cleanupGamePeerData=function(){for(var a in this.actors)this.onActorLeave(this.actors[a],!0);this.clearActors();this.addActor(this._myActor)};f.prototype._onOperationResponseInternal2=function(a,c){c.errCode&&this.logger.warn("Operation",a,"error:",
c.errMsg,"("+c.errCode+")");this.onOperationResponse(c.errCode,c.errMsg,a,c.vals)};f.prototype._onErrorInternal=function(a,c){this.logger.error("Error:",a,c);this.onError(a,c)};f.prototype.initValidNextState=function(){this.validNextState[f.State.Error]=[f.State.ConnectingToMasterserver,f.State.ConnectingToNameServer];this.validNextState[f.State.Uninitialized]=[f.State.ConnectingToMasterserver,f.State.ConnectingToNameServer];this.validNextState[f.State.ConnectedToNameServer]=[f.State.ConnectingToMasterserver];
this.validNextState[f.State.Disconnected]=[f.State.ConnectingToMasterserver,f.State.ConnectingToNameServer];this.validNextState[f.State.ConnectedToMaster]=[f.State.JoinedLobby];this.validNextState[f.State.JoinedLobby]=[f.State.ConnectingToGameserver];this.validNextState[f.State.ConnectingToGameserver]=[f.State.ConnectedToGameserver];this.validNextState[f.State.ConnectedToGameserver]=[f.State.Joined]};f.prototype.checkNextState=function(a,c){void 0===c&&(c=!1);var d=this.validNextState[this.state];
d=d&&0<=d.indexOf(a);if(!d)if(c)this.logger.error("LoadBalancingPeer checkNextState fail: "+f.StateToName(this.state)+" -> "+f.StateToName(a));else throw Error("LoadBalancingPeer checkNextState fail: "+f.StateToName(this.state)+" -> "+f.StateToName(a));return d};f.StateToName=function(a){return Exitgames.Common.Util.getEnumKeyByValue(f.State,a)};f.JoinMode={Default:0,CreateIfNotExists:1,Rejoin:2};f.PeerErrorCode={Ok:0,MasterError:1001,MasterConnectFailed:1002,MasterConnectClosed:1003,MasterTimeout:1004,
MasterEncryptionEstablishError:1005,MasterAuthenticationFailed:1101,GameError:2001,GameConnectFailed:2002,GameConnectClosed:2003,GameTimeout:2004,GameEncryptionEstablishError:2005,GameAuthenticationFailed:2101,NameServerError:3001,NameServerConnectFailed:3002,NameServerConnectClosed:3003,NameServerTimeout:3004,NameServerEncryptionEstablishError:3005,NameServerAuthenticationFailed:3101};f.State={Error:-1,Uninitialized:0,ConnectingToNameServer:1,ConnectedToNameServer:2,ConnectingToMasterserver:3,ConnectedToMaster:4,
JoinedLobby:5,ConnectingToGameserver:6,ConnectedToGameserver:7,Joined:8,Disconnected:10};return f}();a.LoadBalancingClient=l;l=function(f){function b(){return null!==f&&f.apply(this,arguments)||this}__extends(b,f);b.prototype.webRpc=function(c,d){var b=[];b.push(a.Constants.ParameterCode.UriPath,c);b.push(a.Constants.ParameterCode.RpcCallParams,d);this.sendOperation(a.Constants.OperationCode.Rpc,b)};b.prototype.webRpcHandler=function(c){var d=this;return function(b){d._logger.debug("resp Rpc",b);
if(0==b.errCode){var f=b.vals[a.Constants.ParameterCode.UriPath];var e=b.vals[a.Constants.ParameterCode.RpcCallRetData];var g=b.vals[a.Constants.ParameterCode.RpcCallRetCode]}else d._logger.error("WebRpc request error:",b.errCode);c.onWebRpcResult(b.errCode,b.errMsg,f,g,e)}};return b}(g.PhotonPeer);a.LbcPeer=l;var p=function(f){function b(a,d,b){d=f.call(this,d,b,"NameServer")||this;d.client=a;return d}__extends(b,f);b.prototype.onUnhandledEvent=function(c,d){this.client.onEvent(c,d.vals[a.Constants.ParameterCode.CustomEventContent],
d.vals[a.Constants.ParameterCode.ActorNr])};b.prototype.onUnhandledResponse=function(a,d){this.client.onOperationResponse(d.errCode,d.errMsg,a,d.vals)};b.prototype.getRegions=function(c){var d=[];d.push(a.Constants.ParameterCode.ApplicationId,c);this.sendOperation(a.Constants.OperationCode.GetRegions,d,!0,0)};b.prototype.opAuth=function(c,d,b,f,e,h,l){var m=[];m.push(a.Constants.ParameterCode.ApplicationId,c);m.push(a.Constants.ParameterCode.AppVersion,d);b!=a.Constants.CustomAuthenticationType.None&&
(m.push(a.Constants.ParameterCode.ClientAuthenticationType,g.TypeExt.Byte(b)),m.push(a.Constants.ParameterCode.ClientAuthenticationParams,f),e&&m.push(a.Constants.ParameterCode.ClientAuthenticationData,e));h&&m.push(a.Constants.ParameterCode.UserId,h);m.push(a.Constants.ParameterCode.Region,l);this.sendOperation(a.Constants.OperationCode.Authenticate,m,!0,0);this._logger.info("Authenticate...")};return b}(l);a.NameServerPeer=p;var m=function(f){function b(a,d,b){d=f.call(this,d,b,"Master")||this;
d.client=a;return d}__extends(b,f);b.prototype.onUnhandledEvent=function(c,d){this.client.onEvent(c,d.vals[a.Constants.ParameterCode.CustomEventContent],d.vals[a.Constants.ParameterCode.ActorNr])};b.prototype.onUnhandledResponse=function(a,d){this.client.onOperationResponse(d.errCode,d.errMsg,a,d.vals)};b.prototype.findFriends=function(c){var d=[];d.push(a.Constants.ParameterCode.FindFriendsRequestList);d.push(c);this.sendOperation(a.Constants.OperationCode.FindFriends,d)};b.prototype.requestLobbyStats=
function(c){var d=[];if(c&&0<c.length){for(var b=[],f=[],e=0;e<c.length;++e)b[e]=c[e][0],f[e]=c[e][1];d.push(a.Constants.ParameterCode.LobbyName);d.push(b);d.push(a.Constants.ParameterCode.LobbyType);d.push(f)}this.sendOperation(a.Constants.OperationCode.LobbyStats,d)};return b}(l);a.MasterPeer=m;var t=function(f){function b(a,d,b){d=f.call(this,d,b,"Game")||this;d.client=a;return d}__extends(b,f);b.prototype.onUnhandledEvent=function(c,d){this.client.onEvent(c,d.vals[a.Constants.ParameterCode.CustomEventContent],
d.vals[a.Constants.ParameterCode.ActorNr])};b.prototype.onUnhandledResponse=function(a,d){this.client.onOperationResponse(d.errCode,d.errMsg,a,d.vals)};b.prototype.raiseEvent=function(c,d,b){if(this.client.isJoinedToRoom()){this._logger.debug("raiseEvent",c,d,b);c=[a.Constants.ParameterCode.Code,g.TypeExt.Byte(c),a.Constants.ParameterCode.Data,d];if(b){void 0!=b.receivers&&b.receivers!==a.Constants.ReceiverGroup.Others&&(c.push(a.Constants.ParameterCode.ReceiverGroup),c.push(b.receivers));void 0!=
b.cache&&b.cache!==a.Constants.EventCaching.DoNotCache&&(c.push(a.Constants.ParameterCode.Cache),c.push(g.TypeExt.Byte(b.cache)));if(void 0!=b.interestGroup)if(this.checkGroupNumber(b.interestGroup))c.push(a.Constants.ParameterCode.Group),c.push(g.TypeExt.Byte(b.interestGroup));else throw Error("raiseEvent - Group not a number: "+b.interestGroup);void 0!=b.targetActors&&(c.push(a.Constants.ParameterCode.ActorList),c.push(b.targetActors));b.webForward&&(c.push(a.Constants.ParameterCode.Forward),c.push(!0))}this.sendOperation(a.Constants.OperationCode.RaiseEvent,
c)}else throw Error("raiseEvent - Not joined!");};b.prototype.changeGroups=function(c,b){var d=[];null!=c&&void 0!=c&&(this.checkGroupArray(c,"groupsToRemove"),d.push(a.Constants.ParameterCode.Remove),d.push(g.TypeExt.Byte(c)));null!=b&&void 0!=b&&(this.checkGroupArray(b,"groupsToAdd"),d.push(a.Constants.ParameterCode.Add),d.push(g.TypeExt.Byte(b)));this.sendOperation(a.Constants.OperationCode.ChangeGroups,d)};b.prototype.checkGroupNumber=function(a){return!("number"!=typeof a||isNaN(a)||Infinity===
a||-Infinity===a)};b.prototype.checkGroupArray=function(a,b){if(Exitgames.Common.Util.isArray(a))for(var c=0;c<a.length;++c){var d=a[c];if(!this.checkGroupNumber(d))throw Error("changeGroups - "+b+" ("+a+") not an array of numbers: element "+c+" = "+d);}else throw Error("changeGroups - groupsToRemove not an array: "+a);};return b}(l);a.GamePeer=t})(g.LoadBalancing||(g.LoadBalancing={}))})(Photon||(Photon={}));
(function(g){g=g.Lite||(g.Lite={});g=g.Constants||(g.Constants={});g.LiteOpKey={ActorList:252,ActorNr:254,ActorProperties:249,Add:238,Broadcast:250,Cache:247,Code:244,Data:245,GameId:255,GameProperties:248,Group:240,Properties:251,ReceiverGroup:246,Remove:239,TargetActorNr:253,EmptyRoomLiveTime:236};g.LiteEventCode={Join:255,Leave:254,PropertiesChanged:253};g.LiteOpCode={ChangeGroups:248,GetProperties:251,Join:255,Leave:254,RaiseEvent:253,SetProperties:252}})(Photon||(Photon={}));
(function(g){var a=g.LoadBalancing||(g.LoadBalancing={});a=a.Constants||(a.Constants={});var e=g.Lite.Constants.LiteOpKey,h=g.Lite.Constants.LiteOpCode;g=g.Lite.Constants.LiteEventCode;a.ErrorCode={Ok:0,OperationNotAllowedInCurrentState:-3,InvalidOperationCode:-2,InternalServerError:-1,InvalidAuthentication:32767,GameIdAlreadyExists:32766,GameFull:32765,GameClosed:32764,NoRandomMatchFound:32760,GameDoesNotExist:32758,MaxCcuReached:32757,InvalidRegion:32756};a.ActorProperties={PlayerName:255};a.GameProperties=
{MaxPlayers:255,IsVisible:254,IsOpen:253,PlayerCount:252,Removed:251,PropsListedInLobby:250,CleanupCacheOnLeave:249,MasterClientId:248};a.EventCode={GameList:230,GameListUpdate:229,QueueState:228,AppStats:226,AzureNodeInfo:210,Join:g.Join,Leave:g.Leave,PropertiesChanged:g.PropertiesChanged,Disconnect:252,LobbyStats:224};a.ParameterCode={Address:230,PeerCount:229,GameCount:228,MasterPeerCount:227,UserId:225,ApplicationId:224,Position:223,MatchMakingType:223,GameList:222,Secret:221,AppVersion:220,AzureNodeInfo:210,
AzureLocalNodeId:209,AzureMasterNodeId:208,RoomName:e.GameId,Broadcast:e.Broadcast,ActorList:e.ActorList,ActorNr:e.ActorNr,PlayerProperties:e.ActorProperties,CustomEventContent:e.Data,Data:e.Data,Code:e.Code,GameProperties:e.GameProperties,Properties:e.Properties,TargetActorNr:e.TargetActorNr,ReceiverGroup:e.ReceiverGroup,Cache:e.Cache,CleanupCacheOnLeave:241,Group:e.Group,Remove:e.Remove,Add:e.Add,EmptyRoomTTL:e.EmptyRoomLiveTime,PlayerTTL:235,Plugins:204,ClientAuthenticationType:217,ClientAuthenticationParams:216,
ClientAuthenticationData:214,JoinMode:215,MasterClientId:203,FindFriendsRequestList:1,FindFriendsResponseOnlineList:1,FindFriendsResponseRoomIdList:2,LobbyName:213,LobbyType:212,LobbyStats:211,Region:210,IsInactive:233,CheckUserOnJoin:232,ExpectedValues:231,UriPath:209,RpcCallParams:208,RpcCallRetCode:207,RpcCallRetMessage:206,RpcCallRetData:208,Forward:234,Nickname:202};a.OperationCode={Authenticate:230,JoinLobby:229,LeaveLobby:228,CreateGame:227,JoinGame:226,JoinRandomGame:225,Leave:h.Leave,RaiseEvent:h.RaiseEvent,
SetProperties:h.SetProperties,GetProperties:h.GetProperties,ChangeGroups:h.ChangeGroups,FindFriends:222,LobbyStats:221,GetRegions:220,Rpc:219};a.MatchmakingMode={FillRoom:0,SerialMatching:1,RandomMatching:2};a.EventCaching={DoNotCache:0,MergeCache:1,ReplaceCache:2,RemoveCache:3,AddToRoomCache:4,AddToRoomCacheGlobal:5,RemoveFromRoomCache:6,RemoveFromRoomCacheForActorsLeft:7};a.ReceiverGroup={Others:0,All:1,MasterClient:2};a.CustomAuthenticationType={Custom:0,Steam:1,Facebook:2,None:255};a.LobbyType=
{Default:0,SqlLobby:2}})(Photon||(Photon={}));
(function(g){(function(a){(function(a){a.ParameterCode={Channels:0,Channel:1,Messages:2,Message:3,Senders:4,Sender:5,ChannelUserCount:6,UserId:225,MsgId:8,MsgIds:9,SubscribeResults:15,Status:10,Friends:11,SkipMessage:12,HistoryLength:14};a.OperationCode={Subscribe:0,Unsubscribe:1,Publish:2,SendPrivate:3,ChannelHistory:4,UpdateStatus:5,AddFriendds:6,RemoveFriends:7};a.EventCode={ChatMessages:0,Users:1,PrivateMessage:2,FriendsList:3,StatusUpdate:4,Subscribe:5,Unsubscribe:6};a.UserStatus={Offline:0,
Invisible:1,Online:2,Away:3,Dnd:4,Lfg:5,Playing:6};a.UserStatusToName=function(e){return Exitgames.Common.Util.getEnumKeyByValue(a.UserStatus,e)}})(a.Constants||(a.Constants={}))})(g.Chat||(g.Chat={}))})(Photon||(Photon={}));
(function(g){(function(a){var e=function(){function a(a,e){this.sender=a;this.content=e}a.prototype.getSender=function(){return this.sender};a.prototype.getContent=function(){return this.content};return a}();a.Message=e;var h=function(){function a(a,e){this.name=a;this.isPrivat=e;this.messages=[]}a.prototype.getName=function(){return this.name};a.prototype.isPrivate=function(){return this.isPrivat};a.prototype.getMessages=function(){return this.messages};a.prototype.clearMessages=function(){this.messages.splice(0)};
a.prototype.addMessage=function(a){this.messages.push(a)};a.prototype.addMessages=function(a,g){var h=[],m;for(m in a)if(parseInt(m)<g.length){var l=new e(a[m],g[m]);this.addMessage(l);h.push(l)}return h};return a}();a.Channel=h;var k=function(g){function k(a,e,h){a=g.call(this,a,e,h)||this;a.publicChannels={};a.privateChannels={};a.subscribeRequests=[];a.unsubscribeRequests=[];a.autoJoinLobby=!1;return a}__extends(k,g);k.prototype.onStateChange=function(a){};k.prototype.onError=function(a,e){};k.prototype.onSubscribeResult=
function(a){};k.prototype.onUnsubscribeResult=function(a){};k.prototype.onChatMessages=function(a,e){};k.prototype.onPrivateMessage=function(a,e){};k.prototype.onUserStatusUpdate=function(a,e,g,h){};k.prototype.connectToRegionFrontEnd=function(a){return this.connectToRegionMaster(a)};k.prototype.isConnectedToFrontEnd=function(){return this.state==k.ChatState.ConnectedToFrontEnd};k.prototype.subscribe=function(e,g){void 0===g&&(g=0);if(this.isConnectedToFrontEnd()){this.logger.debug("Subscribe channels:",
e);var h=[];h.push(a.Constants.ParameterCode.Channels,e);void 0!=g&&0!=g&&h.push(a.Constants.ParameterCode.HistoryLength,g);this.masterPeer.sendOperation(a.Constants.OperationCode.Subscribe,h);return!0}this.logger.error("subscribe request error:","Not connected to Front End");return!1};k.prototype.unsubscribe=function(e){if(this.isConnectedToFrontEnd()){this.logger.debug("Unsubscribe channels:",e);var g=[];g.push(a.Constants.ParameterCode.Channels,e);this.masterPeer.sendOperation(a.Constants.OperationCode.Unsubscribe,
g);return!0}this.logger.error("unsubscribe request error:","Not connected to Front End");return!1};k.prototype.publishMessage=function(e,g){if(this.isConnectedToFrontEnd()){var h=[];h.push(a.Constants.ParameterCode.Channel,e);h.push(a.Constants.ParameterCode.Message,g);this.masterPeer.sendOperation(a.Constants.OperationCode.Publish,h);return!0}this.logger.error("publishMessage request error:","Not connected to Front End");return!1};k.prototype.sendPrivateMessage=function(e,g){if(this.isConnectedToFrontEnd()){var h=
[];h.push(a.Constants.ParameterCode.UserId,e);h.push(a.Constants.ParameterCode.Message,g);this.masterPeer.sendOperation(a.Constants.OperationCode.SendPrivate,h);return!0}this.logger.error("sendPrivateMessage request error:","Not connected to Front End");return!1};k.prototype.setUserStatus=function(e,g,h){void 0===g&&(g=null);void 0===h&&(h=!1);if(this.isConnectedToFrontEnd()){var m=[];m.push(a.Constants.ParameterCode.Status,e);h?m.push(a.Constants.ParameterCode.SkipMessage,!0):m.push(a.Constants.ParameterCode.Message,
g);this.masterPeer.sendOperation(a.Constants.OperationCode.UpdateStatus,m);return!0}this.logger.error("setUserStatus request error:","Not connected to Front End");return!1};k.prototype.addFriends=function(e){if(this.isConnectedToFrontEnd()){var g=[];g.push(a.Constants.ParameterCode.Friends,e);this.masterPeer.sendOperation(a.Constants.OperationCode.AddFriendds,g);return!0}this.logger.error("addFriends request error:","Not connected to Front End");return!1};k.prototype.removeFriends=function(e){if(this.isConnectedToFrontEnd()){var g=
[];g.push(a.Constants.ParameterCode.Friends,e);this.masterPeer.sendOperation(a.Constants.OperationCode.RemoveFriends,g);return!0}this.logger.error("removeFriends request error:","Not connected to Front End");return!1};k.prototype.getPublicChannels=function(){return this.publicChannels};k.prototype.getPrivateChannels=function(){return this.privateChannels};k.prototype.getOrAddChannel=function(a,e,g){void 0==a[e]&&(a[e]=new h(e,g));return a[e]};k.prototype.initMasterPeer=function(h){var k=this;g.prototype.initMasterPeer.call(this,
h);h.addEventListener(a.Constants.EventCode.ChatMessages,function(e){var g=e.vals[a.Constants.ParameterCode.Senders],f=e.vals[a.Constants.ParameterCode.Messages];e=e.vals[a.Constants.ParameterCode.Channel];var b=k.publicChannels[e];b?(g=b.addMessages(g,f),k.onChatMessages(e,g)):h._logger.warn("ev ChatMessages: Got message from unsubscribed channel ",e)});h.addEventListener(a.Constants.EventCode.PrivateMessage,function(g){var h=g.vals[a.Constants.ParameterCode.Sender],f=g.vals[a.Constants.ParameterCode.Message];
g=g.vals[a.Constants.ParameterCode.UserId];g=k.getUserId()==h?g:h;k.getOrAddChannel(k.privateChannels,g,!0);k.onPrivateMessage(g,new e(h,f))});h.addEventListener(a.Constants.EventCode.StatusUpdate,function(e){var g=e.vals[a.Constants.ParameterCode.Message];k.onUserStatusUpdate(e.vals[a.Constants.ParameterCode.Sender],e.vals[a.Constants.ParameterCode.Status],void 0!==g,g)});h.addEventListener(a.Constants.EventCode.Subscribe,function(e){h._logger.debug("ev Subscribe",e);var g={},f=e.vals[a.Constants.ParameterCode.Channels]||
[];e=e.vals[a.Constants.ParameterCode.SubscribeResults]||[];for(var b in f){var c=f[b];g[c]=!1;b<e.length&&e[b]&&(k.getOrAddChannel(k.publicChannels,c,!1),g[c]=!0)}k.onSubscribeResult(g)});h.addEventListener(a.Constants.EventCode.Unsubscribe,function(e){h._logger.debug("ev Unsubscribe",e);var g={};e=e.vals[a.Constants.ParameterCode.Channels]||[];for(var f in e){var b=e[f];delete k.publicChannels[b];g[b]=!0}k.onUnsubscribeResult(g)})};k.StateToName=function(a){var e=Exitgames.Common.Util.getEnumKeyByValue(k.ChatState,
a);return void 0===e?Exitgames.Common.Util.getEnumKeyByValue(k.State,a):e};k.ChatPeerErrorCode={Ok:0,FrontEndError:1001,FrontEndConnectFailed:1002,FrontEndConnectClosed:1003,FrontEndTimeout:1004,FrontEndEncryptionEstablishError:1005,FrontEndAuthenticationFailed:1101,NameServerError:3001,NameServerConnectFailed:3002,NameServerConnectClosed:3003,NameServerTimeout:3004,NameServerEncryptionEstablishError:300,NameServerAuthenticationFailed:3101};k.ChatState={Error:-1,Uninitialized:0,ConnectingToNameServer:1,
ConnectedToNameServer:2,ConnectingToFrontEnd:3,ConnectedToFrontEnd:4,Disconnected:10};return k}(g.LoadBalancing.LoadBalancingClient);a.ChatClient=k})(g.Chat||(g.Chat={}))})(Photon||(Photon={}));
